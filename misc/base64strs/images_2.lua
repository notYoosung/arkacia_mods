local strs = {
    images = {
        adventure_crystal_rare = "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",
        adventure_crystal_uncommon = "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",
        arrow = "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ICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZWQyNGQwOTEtMmUzOS00NjExLTkwMDEtNTc0MTVkNDcyYWFlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjVkYWYzMDVhLTVkNmEtNDk1My05NjZmLTA4MDlhZGEyNzljYiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjUyZWQ5ZWYwLWFhYTgtNDJkYy1iMzk1LTYwMDA5NmU3MDk4YSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IkxpbnV4IgogICBHSU1QOlRpbWVTdGFtcD0iMTYzMTk1OTUzMDEzODY4MiIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpCYWc+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmU3MGY1NWFkLWY1NzItNGZhOS1iOTNkLTEzYTVlZjdjZTgzZSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChMaW51eCkiCiAgICAgIHN0RXZ0OndoZW49IjIwMjEtMDktMThUMTI6MDU6MzArMDI6MDAiLz4KICAgIDwvcmRmOkJhZz4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OHpXfwAAAYRpQ0NQSUNDIHByb2ZpbGUAACiRfZE9SMNAHMVf0xa1VATtIOKQoTpZEBVx1CoUoUKoFVp1MLn0C5o0JCkujoJrwcGPxaqDi7OuDq6CIPgB4ubmpOgiJf4vKbSI9eC4H+/uPe7eAUK9zDQrMA5oum2mEnExk10Vu17Rg36EEEBQZpYxJ0lJdBxf9/Dx9S7Gszqf+3P0qjmLAT6ReJYZpk28QTy9aRuc94kjrCirxOfEYyZdkPiR64rHb5wLLgs8M2KmU/PEEWKx0MZKG7OiqRFPEUdVTad8IeOxynmLs1ausuY9+QvDOX1lmes0h5HAIpYgQYSCKkoow0aMVp0UCynaj3fwD7l+iVwKuUpg5FhABRpk1w/+B7+7tfKTE15SOA4EXxznYwTo2gUaNcf5Pnacxgngfwau9Ja/UgdmPkmvtbToEdC3DVxctzRlD7jcAQafDNmUXclPU8jngfcz+qYsMHALhNa83pr7OH0A0tRV8gY4OARGC5S93uHd3e29/Xum2d8P3/FybBeAdIoAAAAYUExURWFwAG9ybQAAAEdHR6Ojo52dnf///wAAAB7f4kQAAAABdFJOUwBA5thmAAAAAWJLR0QAiAUdSAAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB+UJEgoFHveykQQAAABWSURBVEjHxdXBDQAgCARBm9z+W7EDQzIaec/DIBxrfagc5CAHOchBDnKQgxzkoBnoVA5ykIMY8Bu4D6O/8Hl4OZO8F7ybnA+cUZyTnNV8L/hm8d28Xhtb6+RxRobhrgAAAA5lWElmTU0AKgAAAAgAAAAAAAAA0lOTAAAAAElFTkSuQmCC",
        arrow_inv = "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQBAMAAADt3eJSAAAAG1BMVEUAAABrY16EfneTjoivrKXJx8Hdy8fl3dzl5ODqkQp0AAAAAXRSTlMAQObYZgAAACpJREFUCFtjYAADZmMIzWDaBBWIcIQwmFoEoFKCDBSDAijNzgYTSUBTAQAd3QMOHVsQwgAAAA5lWElmTU0AKgAAAAgAAAAAAAAA0lOTAAAAAElFTkSuQmCC",
        arrow_overlay = "iVBORw0KGgoAAAANSUhEUgAAAEAAAABABAMAAABYR2ztAAAAMFBMVEUAAAAmHRc9LiRRPTBtVD56YGCvi4vGp6Xdy8fl3dz///8mHReTjoivrKXJx8Hl5OC5XzUgAAAADHRSTlMAAAAAAAAAAAAAAAGIligwAAAAoklEQVRIx2NgoBikT58OZ7+7ACRWIYEFQD5bRUYCTAHf/wuYCkxMjE1cTIxdXICU8fv/DzAUKAoJCgopKSoKKSoJbjx79wAXhhXtGQUwK3juHmDAUJBR1g535NkDDJgK0AFNFHAQUsBOSEEqfgUcpU4J+E1gUwxvwG9FGCE3FBBS0EBhQK3CB4aHApCKUQUjSgG21E6WAnRF2PLUqIJRBfQAAKqtG8vDB9xJAAAADmVYSWZNTQAqAAAACAAAAAAAAADSU5MAAAAASUVORK5CYII=",
    },
}

for kStr, kVal in pairs(strs) do
    local fbox = {type = "fixed", fixed = {-8/16, -1/2, -8/16, 8/16, -7.5/16, 8/16}}
    for i,v in pairs(kVal) do
        local def = {
            use_texture_alpha = "clip",
            groups = {oddly_breakable_by_hand=1, z_item=1, dig_immediate=3},
            node_placement_prediction = "",
        }
        local itemname = i
        local register_func = minetest.register_node
        local image_def = {
            description = "Image Poster: " .. kStr .. "_" .. itemname,
            drawtype = "nodebox",
            selection_box = fbox,
            paramtype = "light",
            paramtype2 = "wallmounted",
            sunlight_propagates = true,
            node_box = fbox,
            collision_box = fbox,
            tiles = {
                {name = "blank.png^[png:" .. v},
                {name = "blank.png^[png:" .. v},
                {name = "blank.png"},
                {name = "blank.png"},
                {name = "blank.png"},
                {name = "blank.png"},
            },
        }
        if i:gmatch("^item_") then
            itemname = i:gsub("^item_", "")
            register_func = minetest.register_craftitem
            table.update(def, {
                description = "Image Item: " .. kStr .. "_" .. itemname,
                inventory_image = "blank.png^[png:" .. v,
            })
        elseif i:gmatch("^node_") then
            itemname = i:gsub("^node_", "")
            register_func = minetest.register_node
            table.update(def, {
                description = "Image Block: " .. kStr .. "_" .. itemname,
                tiles = {
                    {name = "blank.png^[png:" .. v},
                }
            })
        elseif i:gmatch("^image_") then
            itemname = i:gsub("^image_", "")
            register_func = minetest.register_node
            table.update(def, image_def)
        else
            register_func = minetest.register_node
            table.update(def, image_def)
        end
        register_func(":arkacia:images_" .. kStr .. "_" .. itemname, def)

    end
end
