--https://api.minetest.net/representations-of-simple-things/#pointed_thing
--https://forum.minetest.net/viewtopic.php?p=392271#p392271
--https://forum.minetest.net/viewtopic.php?t=27161




minetest.register_tool(":scp:scp_628_j", {
   description = minetest.colorize("#f00", "SCP-628-J\n\"Portal Gun\""),
   inventory_image = ".png",
   groups = {}
})



minetest.register_entity(":scp:scp_628_j_portal_1", {})



minetest.register_craftitem(
   ":scp:scp_628_j",
   {
      description = minetest.colorize("#f00", "SCP-628-J\n\"Portal Gun\""),
      range = 100,
      inventory_image =
      "blank.png^[png:",
      wield_image = "mcl_bows_crossbow_3.png^[contrast:127:127",
      wield_scale = mcl_vars.tool_wield_scale,
      groups = { weapon = 1, weapon_ranged = 1},
      on_place = function(itemstack, user, pointed_thing)
         -- local node = minetest.get_node(pointed_thing.under)
         -- if node.name == "portalgun:button" then
         --    --use the item normally
         --    minetest.item_place(itemstack, user, pointed_thing)
         -- else
            portalgun_onuse(itemstack, user, pointed_thing, 2)
         -- end
         return itemstack
      end,
      on_use = function(itemstack, user, pointed_thing)
         portalgun_onuse(itemstack, user, pointed_thing, 1)
         return itemstack
      end,
   }
)


--[[
/lua local function valid_object_iterator(objects)    local i = 0    local function next_valid_object()       i = i + 1       local obj = objects[i]       if obj == nil then          return       end       if obj:get_pos() then          return obj       end       return next_valid_object()    end    return next_valid_object end local function valid_object_iterator_in_radius(objects, center, radius)    local i = 0    local function next_valid_object()       i = i + 1       local obj = objects[i]       if obj == nil then          return       end       local p = obj:get_pos()       if p and vector.distance(p, center) <= radius then          return obj       end       return next_valid_object()    end    return next_valid_object end  function mcl_util.connected_players(center, radius)    local pls = minetest.get_connected_players()    if not center then return valid_object_iterator(pls) end    return valid_object_iterator_in_radius(pls, center, radius or 1) end local pos = vector.new(995.5,-12.5,-1516.5) local pos2 = vector.new(995.5,-12.5,-1523.5) for v in mcl_util.connected_players(pos, 2) do if v then minetest.after(0.05, function(player) player:set_pos(pos2) end, v) end end
--]]

 minetest.register_craftitem(":pg", {    description = "portal gun? (not workin yet)",    inventory_image =    "blank.png^[png:",    groups = {} })